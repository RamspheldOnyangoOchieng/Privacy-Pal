input {
  beats {
    port => 5044
    ssl => true
    ssl_certificate => "/etc/logstash/certs/logstash.crt"
    ssl_key => "/etc/logstash/certs/logstash.key"
  }
}

filter {
  if [app] == "privacy-pal" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}" }
    }
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
    mutate {
      add_field => { "service" => "privacy-pal" }
    }
  }
  
  if [app] == "privacy-pal-api" {
    grok {
      match => { "message" => "%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}" }
    }
    date {
      match => [ "timestamp", "ISO8601" ]
      target => "@timestamp"
    }
    mutate {
      add_field => { "service" => "privacy-pal-api" }
    }
  }

  if [level] == "ERROR" {
    mutate {
      add_tag => [ "error" ]
    }
  }

  if [level] == "WARN" {
    mutate {
      add_tag => [ "warning" ]
    }
  }
}

output {
  if "error" in [tags] {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      user => "${ES_USER}"
      password => "${ES_PASSWORD}"
      index => "privacy-pal-errors-%{+YYYY.MM.dd}"
      ssl_enabled => true
      ssl_certificate_verification => true
      ssl_certificate => "/etc/logstash/certs/logstash.crt"
      ssl_key => "/etc/logstash/certs/logstash.key"
    }
  } else {
    elasticsearch {
      hosts => ["elasticsearch:9200"]
      user => "${ES_USER}"
      password => "${ES_PASSWORD}"
      index => "privacy-pal-%{+YYYY.MM.dd}"
      ssl_enabled => true
      ssl_certificate_verification => true
      ssl_certificate => "/etc/logstash/certs/logstash.crt"
      ssl_key => "/etc/logstash/certs/logstash.key"
    }
  }
} 